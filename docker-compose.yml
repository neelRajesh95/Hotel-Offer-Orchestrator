version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - REDIS_URL=redis://redis:6379
      - TEMPORAL_HOST=temporal:7233
    depends_on:
      - redis
      - temporal
    networks:
      - hotel-network

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: npm run worker
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6379
      - TEMPORAL_HOST=temporal:7233
    depends_on:
      - redis
      - temporal
    networks:
      - hotel-network

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - hotel-network

  temporal:
    image: temporalio/auto-setup:1.20.0
    ports:
      - "7233:7233"
    environment:
      - CASSANDRA_SEEDS=cassandra
    depends_on:
      - cassandra
    networks:
      - hotel-network

  cassandra:
    image: cassandra:4.0
    ports:
      - "9042:9042"
    volumes:
      - cassandra-data:/var/lib/cassandra
    networks:
      - hotel-network

  temporal-ui:
    image: temporalio/ui:2.10.3
    ports:
      - "8080:8080"
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
    depends_on:
      - temporal
    networks:
      - hotel-network

networks:
  hotel-network:
    driver: bridge

volumes:
  redis-data:
  cassandra-data: